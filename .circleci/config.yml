version: 2.1
jobs:
  build:
    working_directory: ~/circleci-demo-ruby-rails

    docker:
      - image: circleci/ruby:2.7.2-node-browsers-legacy
        environment:
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test      
      - image: circleci/postgres:12.1
        environment:
          POSTGRES_USER: nastya
          POSTGRES_DB: rails_api_flow_auth_test          
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      - run: sudo apt install -y postgresql-client || true
      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle     

      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create
            bundle exec rake db:migrate


      - run:
          name: Run tests
          command: bundle exec rspec  

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

      

commands:
  brakeman:
    description: Run brakeman
    parameters:
      parallel:
        default: true
        description: brakeman vesion. default is latest
        type: boolean
    steps:
    - run:
        command: bundle exec brakeman -o brakeman-output.tabs --no-progress --separate-models
          --exit-on-warn
        name: Run brakeman
        parallel: << parameters.parallel >>
  rails_best_practices:
    description: Run rails_best_practices
    parameters:
      paths:
        default: .
        description: Run rails_best_practices target paths. default is .
        type: string
    steps:
    - run:
        command: bundle exec rails_best_practices << parameters.paths >>
        name: Run rails_best_practices
  reek:
    description: Run reek
    steps:
    - run:
        command: bundle exec reek -s app lib config spec bin db
        name: Run reek
  rubocop:
    description: Run Rubocop
    parameters:
      files:
        default: app/**/*.rb lib/**/*.rb config/**/*.rb spec/**/*.rb script/**/*.rb
        description: rubocop target paths. default is app lib config spec script
        type: string
      report_dir:
        default: $CIRCLE_TEST_REPORTS
        description: rubocop reports dir. default is $CIRCLE_TEST_REPORTS
        type: string
    steps:
    - run:
        command: |
          mkdir -p << parameters.report_dir >>
          rubocop_reports_dir="<< parameters.report_dir >>"/rubocop
          mkdir -p $rubocop_reports_dir
          bundle exec rubocop --require rubocop-rspec --out $rubocop_reports_dir/junit.xml --format progress
        files: << parameters.files >>
        name: Run Rubocop
                   
