version: 2.1

commands:   
    brakeman:
      description: Run brakeman
      parameters:
        parallel:
          default: true
          description: brakeman vesion. default is latest
          type: boolean
      steps:
      - run:
          command: bundle exec brakeman -o brakeman-output.tabs --no-progress --separate-models
            --exit-on-warn
          name: Run brakeman
          parallel: << parameters.parallel >>
    rails_best_practices:
      description: Run rails_best_practices
      parameters:
        paths:
          default: .
          description: Run rails_best_practices target paths. default is .
          type: string
      steps:
      - run:
          command: bundle exec rails_best_practices << parameters.paths >>
          name: Run rails_best_practices
    reek:
      description: Run reek
      steps:
      - run:
          command: bundle exec reek -s app lib config spec bin db
          name: Run reek
    rubocop:
      description: Run Rubocop
      command: bundle exec rubocop
jobs:
  build:
    working_directory: ~/circleci-demo-ruby-rails

    docker:
      - image: circleci/ruby:2.7.2-node-browsers-legacy
        environment:
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test      
      - image: circleci/postgres:12.1
        environment:
          POSTGRES_USER: nastya
          POSTGRES_DB: rails_api_flow_auth_test          
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      - run: sudo apt install -y postgresql-client || true
      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle     

      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create
            bundle exec rake db:migrate


      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
    
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results 
      
      - brakeman
      - rails_best_practices
      - reek
      - rubocop
        
            
